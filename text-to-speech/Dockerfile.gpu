FROM nvidia/cuda:11.7.1-runtime-ubuntu20.04

# Set timezone to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install system dependencies for TTS engines with GPU support
RUN apt-get update && apt-get install -y \
    espeak \
    espeak-data \
    libespeak1 \
    libespeak-dev \
    festival \
    alsa-utils \
    portaudio19-dev \
    python3-dev \
    python3-pip \
    build-essential \
    pkg-config \
    cmake \
    git \
    curl \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install Python dependencies with GPU acceleration
RUN pip3 install --upgrade pip

# Install PyTorch with CUDA 11.7 support
RUN pip3 install --no-cache-dir \
    torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu117

# Install core packages (matching working standard profile)
RUN pip3 install --no-cache-dir \
    fastapi==0.104.1 \
    uvicorn==0.24.0 \
    pyttsx3==2.90 \
    gTTS==2.4.0 \
    edge-tts==6.1.9 \
    python-multipart==0.0.6 \
    httpx==0.25.2 \
    pydantic==2.5.0 \
    soundfile==0.12.1 \
    numpy==1.24.4 \
    scipy \
    librosa

# Install additional dependencies for Silero TTS (accessed via torch.hub)
RUN pip3 install --no-cache-dir \
    omegaconf \
    tqdm

# Install Chatterbox TTS during build (like working standard profile) 
# This prevents pip dependency conflicts from post-deployment installation
RUN pip3 install --no-cache-dir chatterbox-tts==0.1.2 || echo "Chatterbox TTS installation failed - will fallback to other engines"

# Copy service files
COPY . .

# Create cache directories for GPU models
RUN mkdir -p /root/.cache/torch/hub
RUN mkdir -p /root/.local/share/tts

# Pre-download Silero models for faster startup
RUN python3 download_models.py || echo "Failed to pre-load models, will download on first use"

# Expose port
EXPOSE 5002

# Set environment variables for GPU
ENV CUDA_VISIBLE_DEVICES=0
ENV TTS_GPU_ENABLED=true

# Run the service with GPU support
CMD ["python3", "tts_service_gpu.py"] 